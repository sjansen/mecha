// Code generated by protoc-gen-go. DO NOT EDIT.
// source: translate.proto

package translate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Original struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Original) Reset()         { *m = Original{} }
func (m *Original) String() string { return proto.CompactTextString(m) }
func (*Original) ProtoMessage()    {}
func (*Original) Descriptor() ([]byte, []int) {
	return fileDescriptor_translate_9090ac9da03399ef, []int{0}
}
func (m *Original) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Original.Unmarshal(m, b)
}
func (m *Original) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Original.Marshal(b, m, deterministic)
}
func (dst *Original) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Original.Merge(dst, src)
}
func (m *Original) XXX_Size() int {
	return xxx_messageInfo_Original.Size(m)
}
func (m *Original) XXX_DiscardUnknown() {
	xxx_messageInfo_Original.DiscardUnknown(m)
}

var xxx_messageInfo_Original proto.InternalMessageInfo

func (m *Original) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Translation struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Translation) Reset()         { *m = Translation{} }
func (m *Translation) String() string { return proto.CompactTextString(m) }
func (*Translation) ProtoMessage()    {}
func (*Translation) Descriptor() ([]byte, []int) {
	return fileDescriptor_translate_9090ac9da03399ef, []int{1}
}
func (m *Translation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Translation.Unmarshal(m, b)
}
func (m *Translation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Translation.Marshal(b, m, deterministic)
}
func (dst *Translation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Translation.Merge(dst, src)
}
func (m *Translation) XXX_Size() int {
	return xxx_messageInfo_Translation.Size(m)
}
func (m *Translation) XXX_DiscardUnknown() {
	xxx_messageInfo_Translation.DiscardUnknown(m)
}

var xxx_messageInfo_Translation proto.InternalMessageInfo

func (m *Translation) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Original)(nil), "translate.Original")
	proto.RegisterType((*Translation)(nil), "translate.Translation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Translator service

type TranslatorClient interface {
	Translate(ctx context.Context, in *Original, opts ...grpc.CallOption) (*Translation, error)
}

type translatorClient struct {
	cc *grpc.ClientConn
}

func NewTranslatorClient(cc *grpc.ClientConn) TranslatorClient {
	return &translatorClient{cc}
}

func (c *translatorClient) Translate(ctx context.Context, in *Original, opts ...grpc.CallOption) (*Translation, error) {
	out := new(Translation)
	err := grpc.Invoke(ctx, "/translate.Translator/Translate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Translator service

type TranslatorServer interface {
	Translate(context.Context, *Original) (*Translation, error)
}

func RegisterTranslatorServer(s *grpc.Server, srv TranslatorServer) {
	s.RegisterService(&_Translator_serviceDesc, srv)
}

func _Translator_Translate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Original)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorServer).Translate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/translate.Translator/Translate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorServer).Translate(ctx, req.(*Original))
	}
	return interceptor(ctx, in, info, handler)
}

var _Translator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "translate.Translator",
	HandlerType: (*TranslatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Translate",
			Handler:    _Translator_Translate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "translate.proto",
}

func init() { proto.RegisterFile("translate.proto", fileDescriptor_translate_9090ac9da03399ef) }

var fileDescriptor_translate_9090ac9da03399ef = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x29, 0x4a, 0xcc,
	0x2b, 0xce, 0x49, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xc9, 0x70, 0x71, 0xf8, 0x17, 0x65, 0xa6, 0x67, 0xe6, 0x25, 0xe6, 0x08, 0x09, 0x70, 0x31, 0xe7,
	0x16, 0xa7, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x4a, 0xf2, 0x5c, 0xdc, 0x21,
	0x50, 0xa5, 0x99, 0xf9, 0x79, 0x98, 0x0a, 0x8c, 0x3c, 0xb8, 0xb8, 0x60, 0x0a, 0xf2, 0x8b, 0x84,
	0xac, 0xb8, 0x38, 0x61, 0xbc, 0x54, 0x21, 0x61, 0x3d, 0x84, 0xb5, 0x30, 0x2b, 0xa4, 0xc4, 0x90,
	0x04, 0x91, 0x4c, 0x56, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x8a, 0x1e, 0x1b, 0xb2, 0xad, 0x00, 0x00, 0x00,
}
